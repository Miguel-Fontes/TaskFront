$body-background-color: ghostwhite;
$default-background-color: white;
$decoration-border-color:  skyblue;
$decoration-border-hover: deepskyblue;
$alt-decoration-border: white;
$alt-decoration-border-hover: white; 

$break-small: 450px;
$break-large: 650px;

$tasklist-context: 272; // 952px. Usado para cálculo das medidas fluídas.



// Design Responsivo
@import "responsive";
/*Uso --> Setar os breaks nas variáveis 

  @include respond-to(medium-screens) { margin-top: 10px;}
  @include respond-to(handhelds) {margin: 5px auto 20px;};*/
  

@mixin box-sizing() {
    html {
        box-sizing: border-box;
    }
    *, *:before, *:after {
        box-sizing: inherit;
    }
}

@function fluidizePerc($context, $target) {
    @return ($context / $target) * 100%;
}

@function fluidizeEm($target, $context) {
    @return ($target / $context) * 1em;
}

@mixin shadows() {
 box-shadow: -0px 1px 1px 1px $shadows-color;
}

@mixin shadowsAtivo() {
  box-shadow: 1px 1px 8px 1px $shadows-color;
}


/* apply a natural box layout model to all elements, but allowing components to change */

@mixin shadowsInterativas() {
  @include shadows();
  transition: box-shadow 0.2s ease-in-out;
  &:hover {
    @include shadowsAtivo();
  }
}


@include box-sizing();

/* Resets */
.list-unstyled {
    list-style: none;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
}

button {
    border: none;
    -moz-padding-end: 60px;
    padding-inline-end: 0px;
    padding-block-end: 0px;
    -moz-padding-start: 0px;
    padding-inline-start: 0px;
}


h1{
    margin: 0 0 0 0;
}

/* General Rules */

header {
border-bottom: 1px solid black;
margin-bottom: 1em; 
padding: 1em 1em 1em 1em;   
background-color: white;
vertical-align: middle;
    h1 {
        display: inline-block;
        width: 80%;
    }
}

main {
    width: 100%;
}

body {
    background-color: ghostwhite;
    font-family: "Roboto Condensed", sans-serif;
}

section {
    max-width: 1000px;
    margin: 0 auto;
    padding: 1em 1em 1em 1em;
}

article {
    width: 100%;
    margin: 0 auto;
}


/* Inputs Rules*/
.big-input {
    width: 100%;
    padding: 1em 1em 1em 1em;
    font-size: 1em;
                &:focus {
                -webkit-transition: all .2s ease-in;
                transition: all .2s ease-in;
                transition-property: all;
                transition-duration: 0.2s;
                transition-timing-function: ease-in;
                transition-delay: 0s;
                border: 1px solid deepskyblue;
            }
}


/* Buttons Rules */
.big-button {
    padding: 0.5em 3em 0.5em 3em;
}

.colorful-button {
    background-color: skyblue;
    
    &:hover {
    background-color: deepskyblue;
    }
}

/* Tasklist */
.list-container {
    margin-top: 1em;
}

#taskList {
    li {
        display: inline-block;
        margin-bottom: 0.5em;
        padding: 0.5em;
        border-bottom: 0.3em solid skyblue;
        background-color: white;
        box-shadow: 0 0 2px rgba(0,0,0,0.12),0 2px 4px rgba(0,0,0,0.24);
        transition: all 0.1s ease-in-out;
        flex-basis: 100%;
        width: 100%;
        line-height: 2em;        
        overflow: hidden;
        
        &:hover {
            background-color: ghostwhite;
            border-bottom: 0.3em solid deepskyblue;
        }
        
        #controles {
            display: block;
            text-align: right;
            //min-width: fluidizePerc(80, $tasklist-context);
            float: right;
        }
        
        #descricao {
            max-width: fluidizePerc(200, $tasklist-context);
            overflow: hidden;
        }

        input {
           margin:0 fluidizePerc(3, $tasklist-context) 0 fluidizePerc(3, $tasklist-context);//   0.5em 0.5em 0.5em 0.5em;  
        }
    
   
        &.done {
            text-decoration: line-through;
            background-color: mediumslateblue !important;
            border-bottom: 0.3em solid blue;
            color: white;
        }
        
       i {
           //margin-left: 0.5em;
           padding: 0 0.2em 0 0.2em;
           text-align: right;
       }
    }
}

/* Status Rules */
.error {
    border: 1px solid red !important;
}


